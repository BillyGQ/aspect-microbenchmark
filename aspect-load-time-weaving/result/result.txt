biqian@CT1-8724A-M</comput ~/work/sources/references/aspect-microbenchmark $ java -jar aspect-load-time-weaving/target/aspect-load-time-weaving-1.0-SNAPSHOT.jar

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::                (v2.4.3)

2021-03-01 14:04:45.264  WARN 80681 --- [           main] o.s.boot.StartupInfoLogger               : InetAddress.getLocalHost().getHostName() took 5011 milliseconds to respond. Please verify your network configuration (macOS machines may need to add entries to /etc/hosts).
2021-03-01 14:04:45.268  INFO 80681 --- [           main] com.priceline.jmh.JMHApplication         : Starting JMHApplication using Java 15.0.2 on CT1-8724A-M</comput with PID 80681 (/Users/biqian/work/sources/references/aspect-microbenchmark/aspect-load-time-weaving/target/aspect-load-time-weaving-1.0-SNAPSHOT.jar started by biqian in /Users/biqian/work/sources/references/aspect-microbenchmark)
2021-03-01 14:04:45.268  INFO 80681 --- [           main] com.priceline.jmh.JMHApplication         : No active profile set, falling back to default profiles: default
2021-03-01 14:04:45.843  INFO 80681 --- [           main] com.priceline.jmh.JMHApplication         : Started JMHApplication in 5.98 seconds (JVM running for 6.387)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.openjdk.jmh.util.Utils (jar:file:/Users/biqian/work/sources/references/aspect-microbenchmark/aspect-load-time-weaving/target/aspect-load-time-weaving-1.0-SNAPSHOT.jar!/BOOT-INF/lib/jmh-core-1.27.jar!/) to field java.io.Console.cs
WARNING: Please consider reporting this to the maintainers of org.openjdk.jmh.util.Utils
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
# JMH version: 1.27
# VM version: JDK 15.0.2, Eclipse OpenJ9 VM, openj9-0.24.0
# *** WARNING: This VM is not supported by JMH. The produced benchmark data can be completely wrong.
# VM invoker: /Users/biqian/.sdkman/candidates/java/15.0.2.j9-adpt/bin/java
# VM options: -server
# JMH blackhole mode: full blackhole + dont-inline hint
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.priceline.jmh.JMHApplication.microBenchmark

# Run progress: 0.00% complete, ETA 00:02:30
# Fork: N/A, test runs in the host VM
# *** WARNING: Non-forked runs may silently omit JVM options, mess up profilers, disable compiler hints, etc. ***
# *** WARNING: Use non-forked runs only for debugging purposes, not for actual performance runs. ***
# Warmup Iteration   1: 940608.562 ops/s
# Warmup Iteration   2: 913449.088 ops/s
# Warmup Iteration   3: 948829.554 ops/s
# Warmup Iteration   4: 966343.488 ops/s
# Warmup Iteration   5: 972862.670 ops/s
Iteration   1: 957214.691 ops/s
Iteration   2: 924955.958 ops/s
Iteration   3: 940952.580 ops/s
Iteration   4: 962966.794 ops/s
Iteration   5: 973510.210 ops/s
Iteration   6: 991212.890 ops/s
Iteration   7: 1007120.104 ops/s
Iteration   8: 1008144.615 ops/s
Iteration   9: 1003377.893 ops/s
Iteration  10: 1006751.394 ops/s

Result "com.priceline.jmh.JMHApplication.microBenchmark":
  977620.713 ±(99.9%) 45814.977 ops/s [Average]
  (min, avg, max) = (924955.958, 977620.713, 1008144.615), stdev = 30303.770
  CI (99.9%): [931805.736, 1023435.690] (assumes normal distribution)


# Run complete. Total time: 00:02:39

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                       Mode  Cnt       Score       Error  Units
JMHApplication.microBenchmark  thrpt   10  977620.713 ± 45814.977  ops/s

Benchmark result is saved to jmh-result.json